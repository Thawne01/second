"""
未知参数放在关键字参数前面
有代码函数，无代码函数  有参函数，无参函数
默认参数
大多数情况下值相同，定义为默认形参
大多数情况下值不相同，定义为位置形参
不定长参数*z 溢出的位置参数保存成元组     元组有序                         可以打散输出 可以print(*z)
        **z 溢出的关键字参数保存成字典  字典无序     不能用未知参数的变量名  不能打散输出 要用print(z)
args=(),kwargs={}
实参可以打散字典作为关键字传入
return 返回一次函数就运行完毕
input 获取的是字符串
调用函数：语句形式，表达式形式，当做参数传入函数
外部不能访问函数内部的变量，函数可以访问外部的变量，但不能修改外部的变量
global 声明为外部变量         nonlocal 可以让嵌套函数修改被嵌套函数的变量值
嵌套函数就是嵌套在一个函数里面的，在一个函数里面被定义的函数
被嵌套函数是被嵌套的函数，     嵌套函数和被嵌套函数是一个相对的概念
"""
# def distract(a,b,*j):
#     print(a)
#     print(b)
#     print(j)
a= {'z': 5, 'g': 6, 'o': 9}
#distract(1,7,**a)  #**a 作用像是“打散”，变成一对一对的关键字参数
# def disract(*args,**kwargs):
#     print(args)
#     c=abs(args)      #绝对值函数
#     if_ko = all(c, kwargs)#all()里面是一个可迭代对象，当里面的可迭代对象都为真时返回真，全空返回真，但凡有一个假就返回False
#     print(if_ko)
#     any([])#参考all()
#     print(kwargs)
#
# f = (5,3,54,789)
# disract(1, 2 ,*f,**a)    #*f   作用像是“打散”，使变成一个个位置参数传入函数，然后由写定函数里的*j接收这些未知参数

"""ASCII码与字符的互相转换
   只能转换一个字符，因为在ASCII表上一个字符对应一个编码值"""
k = ord('j')
print(k)
print(chr(k)+'《雨一直下》')#字符串的拼接

"""打包函数,zip(),将两个列表中的元素一一对应打包成元组，单个的元素被舍弃"""
l1 = ['a', 'v', 'l']
l2 = [4, 8, 6, 5, 98]
print(dict(zip(l1, l2)))

"""exec()可以运行字符串里的代码"""